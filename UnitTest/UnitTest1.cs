using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NUnit;
using NUnit.Framework;
using Laba1_2;

namespace UnitTest {
    [TestFixture]
    public class UnitTest1 {
        [Test]
        [TestCase("8E9968548F2B496C7FDC0C077F16CD8CC399F26D12871CEF2E49642377AE84FF1E47B0FE2422353266C32D45CAAB819C3A771F1F37554A2952FFD9B83E7D6BD99683AA6A38AFA42AF0BDCC3E19AAADA3D2A7C002351FBB0155910D78670502D05571D9AA36EF4FA71EE63D6FB74E2F5CECD8070A9B09D312A54A4FBFFF37462A", "8EE03170D0939CAD68732481EE1AF05D023A1E8EDC67F6D1AE3E72E8881197A02A8CDF654D265C674DDE34B5B3AB80BB44606FC67901602F6DF573FAECF80C872F6729E5EC8BE8C547AD283A553691B05C264C2A64A7793206BFA26500F293A2042177CEB0F67FAEFAEA2F082FD373F03E03BE08840D6487C27A3082CC6C2BDE", "11D7999C55FBEE619E84F30896D31BDE9C5D410FBEEEF13C0DC87D70BFFC01C9F48D4906371489199B4A161FB7E5702577ED78EE5B056AA58C0F54DB32B757860C5EAD450253B8CF0386AF4786EE13F542ECE0C2C99C734335C50AFDD67F7967259935178E7E5CF5619D06C77E721A34D2ADBC5131F17379A67C48042CBA37208")]
        [TestCase("A208F2341973A2F517D68741B2DE1DE8921BFC4EA0A1C4DA67FE894DAF976A86", "92BE89BBFCD3760ADF1071EAB7B159EC00C8D22A812B103FE8A24A7B1C922499", "134C77BF0164718FFF6E6F92C6A8F77D492E4CE7921CCD51A50A0D3C8CC298F1F")]
        [TestCase("C77E6EA7802A07E31653C4C0AF78F3CF46C47029E854EAD5B6710BFD1ED761DD", "530443350EDB89BF4809DF6E22FE8BF41D0E4E5212762AADA74F125A20996F9A", "11A82B1DC8F0591A25E5DA42ED2777FC363D2BE7BFACB15835DC01E573F70D177")]
        [TestCase("6E90A982977373DDC113D00578416811A541A7BF255C20CCDFFE10A0ED44E852874FBC1CE89D2051F6E976AFDBE808D9", "28E5296DBFDA46B352F0B55A94A893E5BAB7C3FFF244A189676E4A3A85F0385809EE736AD27FD4E09BA605EEEB16CA2C", "9775D2F0574DBA91140485600CE9FBF75FF96BBF17A0C256476C5ADB733520AA913E2F87BB1CF532928F7C9EC6FED305")]
        public void TestAdd(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);


            var actualResult = Program.ToStr(Program.AddLong(aa, bb));
            Assert.AreEqual(c, actualResult);
        }
        [Test]
        [TestCase("5C353D8D758E06E4DFFB37B5",
                  "0",
                  "5C353D8D758E06E4DFFB37B5"
            )]
        [TestCase("5C353D8D758E06E4DFFB37B5",
                  "1",
                  "5C353D8D758E06E4DFFB37B4"
            )]
        [TestCase("6E90A982977373DDC113D00578416811A541A7BF255C20CCDFFE10A0ED44E852874FBC1CE89D2051F6E976AFDBE808D9", "28E5296DBFDA46B352F0B55A94A893E5BAB7C3FFF244A189676E4A3A85F0385809EE736AD27FD4E09BA605EEEB16CA2C", "45AB8014D7992D2A6E231AAAE398D42BEA89E3BF33177F43788FC6666754AFFA7D6148B2161D4B715B4370C0F0D13EAD")]
        [TestCase("FF92413583A4CAA23ECF4BB33025B1A58DE1217F358D0F40BE07D91AA298BB5E57B47199DA3D3EFA48487917D861CFA53CE5C0F2C46DEACAF0AC9E31C6578899", "8CFDEAF151E82924FB80AA4B861142CE6C524B34E61CC2ADED9AC5FBD650AFFAB2FBE98C1FB758D0A2C90E26DA6D7DA8623B3C49F7D4F16207A1B5D6B7875E25", "7294564431BCA17D434EA167AA146ED7218ED64A4F704C92D06D131ECC480B63A4B8880DBA85E629A57F6AF0FDF451FCDAAA84A8CC98F968E90AE85B0ED02A74")]
        public void TestSub(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);


            var actualResult = Program.ToStr(Program.SubLong(aa, bb));
            Assert.AreEqual(c, actualResult);
        }

        [Test]
        [TestCase("354FE50A9396DA3D5BDB6327FBF7DE11871BF3D0143055EC2AB3786D3A85E62EC763A05A73A7F08D21EEE3CBCAE207E40854121BFF8258F7B2B293B0D30277CD",
                  "58800406778F64750E949A6D229AC61FCD424632593C4735A664199B424E606126A31B875E3D5E9E9C2E13D6995CC801E60C30247808A6EE01E78895E16EAD95",
                  "126E1F84C05F2F0478BC1BB97EA870E2357DFF1FA3ED0F8D9E4F2C4B1CF933D3F64BD22D9761FD598EF8F381AB2A84294359B2EE43D70170CF9182EBB961D56D19970429DEF02494C95B341ACC75EFF227A0D4BDD9149483D9D7143D56B3C25D8B55B81433AD812F60A7F4234854EB569EC021432DA486C3963DED2F227B4351")]
        [TestCase("B427629D0ECE5E77476643F0310B1FCF029CA9286165FD5638CDD88155E5E68A2B66FC28861FB57657E27A1D41D3E61730FAB712FB0E55728443D1A18C27DE41",
                  "5DAC441A8D178EEA44A1925C8CA96F87CAD1A377C0A32F6B1B5EF9B9C35EB4C880A08ABDA44199E807A4938658C6EC7CA27C558C226EE5E24E3CA8DA66A74E71",
                  "41EB89367562EC483164D0C6D5CADBDFA26C21CA40EEC1901C0ACAA8D2DD4B7AAA098AF873217DC3E34AE4A3D838DD3896AFD43B8C8336D47B41F082EB60FC1AAD6BA433EA3528F54ECF544CB7252EFA3CC6E1398D56723BC109BC9D23F079ABC7EB03DCCC266BDB80A08EEAC6D6B9AFBFC8E0899297CA9A9312FCECE5B7E8B1")]
        [TestCase("AFB69AD91CB62A4F1A955E271B78D8DFF74A4128CF9404854AF14C11BE5B37E96DE97B2F54F668FEBED6162E30FD36D3B6F960A67E1129706EC5A0EF57DD3E45",
                  "8FCAA5A2D5E40D532389BC06A797E51A224CA67B43D9FD5D056F5E4020FF7266F3B30337952B3E694B579C82C1BFD3BC6B64FA7BA85804237852F410B5F276C4",
                  "62B21845EC85CCE30B870AE3825560BD43B7084466385E0E87D5BF6D92CA8BC8F5B7AED2293324C1AD4EC918A83FFA40051F788850BBAC2C4A9E0DE0E81A8F88B11FEA1BFFCB325B2959CFE1463F864598D6DB36F4517F8F8BD552CA2E64FF342D7B127B196A6B0019F0CE9DE0B9A691640A5B9D48609EF0EA25AE3AE6517AD4")]
        [TestCase("5C353D8D758E06E4DFFB37B5", "1", "5C353D8D758E06E4DFFB37B5")]
        [TestCase("2", "2", "4")]
        [TestCase("4", "4", "10")]
        [TestCase("1", "1", "1")]
        [TestCase("10", "4", "40")]
        [TestCase("4B", "2907058A0A9", "C050E9F71183")]
        [TestCase("A208F2341973A2F517D68741B2DE1DE8921BFC4EA0A1C4DA67FE894DAF976A86", "A208F2341973A2F517D68741B2DE1DE8921BFC4EA0A1C4DA67FE894DAF976A86", "668F52D9F89E7C315B165F4A8FF1E2935238C7678A87939F5277513F121323F28EF99B183239D24AC441CFCDED27EEB743747803A8A321EA5F71DDCE0A673E24")]
        public void TestMulti(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);


            var actualResult = Program.ToStr(Program.Multi(aa, bb));
            Assert.AreEqual(c, actualResult);
        }


        [Test]
        [TestCase("ABABABABAABABABABABABAABABABABABABAABAB", "ABABABABAABABABABABABAABABABABABABAABAB", "1")]
        [TestCase("ABABABABAABABABABABABAABABABABABABAABAB", "1", "ABABABABAABABABABABABAABABABABABABAABAB")]
        [TestCase("3AC9EC8A7D3A554C1E9094A1854ACB0E2B7CBDDE59C2ADA018173C98BF4DFB1BD8D5DCCFD5BDFA9E91C8839958684D7121B4DA8863925E77EA0A27A28867B6CE", "A320855784D35118ABBDA9116A2D52B9CF76C5C69427AED4F3ADD63FC3B6CC36", "5C42488F9D580BBA73B6AB5FAEAB251C023E016259A48D44B1947A3837BA0E29")]
        [TestCase("101A3F04E4BB34DD41FE0893D0FCF341776CFF41016BB753DBF23B5D6FEBF156B5CE6C511D5E54876559CF6A0BC3CDB93CE883331CE1349F604D789C440E1FBA", "62CFC9B03F18DEB0667A9F46DEA1D1D10AB9720ED7379F544B8C5DC67211EF89", "29B7DCAFF9696345732544724E3C71710551355E18CB3405AF5917CFF3B0F890")]
        public void TestDiv(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);


            var actualResult = Program.ToStr(Program.Div(aa, bb));
            Assert.AreEqual(c, actualResult);
        }

        [Test]
        [TestCase("FFFFFFFFFFFFFFFFFFFFFFFFF", "0", "1")]
        [TestCase("2", "0", "1")]
        [TestCase("2", "1", "2")]
        [TestCase("2", "3", "8")]
        [TestCase("2", "4", "10")]
        [TestCase("2", "5", "20")]
        [TestCase("2", "A", "400")]
        [TestCase("16D4CA8", "81", "47F077521DEA7B5C4CD4386F372D61793C148D2E707929FECFA88A253039BA4DF2E1BBB2EA092CA971416B99387373D3461E217E4717421BB4B1EBF9E7F03E49C4D3C772AF7F9D0C9DAE6C780EC639586992B190A3B985366BCF1DCAF6D80D1A49F1BF8BECCC26FE60F2F442BE1EF46F86580AAECB4DABE31244739193EFABF51DA3C4BDD66DA64602C2C54679F65CC6D7E61F6F14F91A74C929304163C9A50399477675E4CD92A76026EEECD7447B2B9664D0C2FEB79C1F46CAFA4A0CF8115706A028CB59F8B3A13821549D46F7B825FA3CB4A44AC3966EEF6395827F6F424DCFAF0D729CECFBDEE7EC4AA5F6EC4ECC011B788586B4CEDD179493AB425241A1573CF34B3FFD0B4DCDCA9C5366FA8C362DD876FF09900E49E172435F01B31B84209845B868AA3E495B0BEADA8415E1D7C788FC9FBB87561FCBEDB2BC7E47F086FDBF9840369FB384B24B66B90BE27968928A56ABD71C1FEF5863CA8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")]
        [TestCase("4B", "21", "2EE23EFAD9F31E4D2F24BFABDF6BEFA129ABDCF8C0116B93E4CB")]
        public void GornerTest(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);


            var actualResult = Program.ToStr(Program.Gorner(aa, bb));
            Assert.AreEqual(c, actualResult);





        }


        [Test]
        [TestCase("AAAAAAAAAA", "AAAAAAAAAA", "AAAAAAAAAA")]
        [TestCase("F", "A", "5")]
        [TestCase("4D0FFA257CCEA11EBAB1F01E65A77392D01F1", "48C1B463F2782F60D0", "1")]
        [TestCase("1DF9E9A", "4", "2")]
        public void gcdTest(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);

            var actualResult = Program.ToStr(Program.gcd(aa, bb));
            Assert.AreEqual(c, actualResult);
        }



        [Test]
        [TestCase("3540A", "192", "EE")]
        [TestCase("5", "3", "2")]
        [TestCase("4", "3", "1")]
        [TestCase("2B", "7", "1")]
        [TestCase("AFAFAFAF", "FFFF", "5F5F")]
        [TestCase("10000000", "FFFF", "1000")]
        [TestCase("FFFFFAAAAFF32549877523487", "3F2782F60D0AD", "3D70A6B5AD60E")]
        [TestCase("8882FABDA2031571278293379", "3F2782F60D0AD", "7328466E5199")]
        [TestCase("11111FFFFF764239156912765", "3F2782F60D0AD", "388C3EF9AE13")]
        [TestCase("E3AE74A8EC74A313C8BED20D4349D9EFBA356FE6E8AD89E21C2D028111C06F422DC8E0F2E5F448830D1D61B5A7AEAC088E31AA290891E06AD83C0786443611AF",
                  "49FE1165CB7A21D12D6ACEC225285544B36BABD3F8B4DD8D94EDE1A444B9738ADF06CDB40DCAFA87B25A8BECA2D2262A53D8431A119405F0CBEFB83D2AD547CC",
                  "5B440778A063DA0407E65C6D3D0DA219FF26C6AFE8EF1395D635D94439414A190B477D6BC9358EBF60DBDEFBF38398992A8E0DAD3D5CE98746CDECEC3B63A4B")]
        [TestCase("17EFC320375C595D14B25E46B1D50B88D05E24FE722E536A32672BBD775105497475BB33FDF7965B087D34B7B22C16030619190621184AACBB415078BD9E199",
                  "3F304DFA2BBDA4896B3683D9F1F27BA74983B9A63B7926E2D2D0D6E75F863560",
"B81D9E67DCA2DB4F529F29234D0ECF650B61BF04B3F7A03B8B7D51F86B77FF9")]

        public void BarretTest(string a, string b, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);

            var actualResult = Program.ToStr(Program.BarrettReduction(aa, bb));
            Assert.AreEqual(c, actualResult);
        }

        [Test]
        [TestCase("2E151CB", "10C2", "23413", "227E2")]
        [TestCase("AB9399181470F", "1", "9328F", "18D9C")]
        [TestCase("82", "6C", "133", "111")]
       // [TestCase("E51C9687DB7BEDE1A7F0718B8329D08C7FC31225880A7D8C23BDA5FB731B863CA311B73559F1A649CBD9D9C84A77B57BF1BA8FC6D98160D15B632EA4D42FC4725FBD232A03BA38E14096FF447BC0C55809AB8FDD5904EB86DAF168EA169A703307A7480D5CB773DEA53C4F85F30DE46A21C56BC960003A4AD976BBFE40DF4564", "BE4290BA83AB483CD0C470A709C13794CE1BC45D5050A4E4298C50BF89963C1A65635F82151D041C9051444BD23164B677DF63D1C8A6801C598DFE901AA64E78851B208432D214076C3F03FA4E21A2A96BAAD535F1D3A62B409F249E6424571199738330ACA335E826390B9DEB80BF113771081EFDB282F57060E776C197ECE8", "40F43E45D506C892C36A80D1F1AF9D2427179711B7C12C1B5BAAF8453C2CC710CBF9144D2A6B8CE297529C8CB56C5353FDA7E4C03B3BEC4DBBD96AD75F00011BE784C7F2B99F18539700D7189D4089ED88AE5BC02799F74DA331CC430C22E4F2A638812B3CCC1422AD137B81D90E9040949D12D7BEE4EFB17BA5AAEFC739EA2A", "1F561A664D81762BD16A088219A4DD6C10C9181160B789AC10544B3366714FFAE9404A0D15A4152A54E2AB78F181C33FEC25F68004B888953B4AC2F78D23E971E7C43710CD89E1E6D0BD3AF57AB55887964B3968B6854E83B7FDE7A9B85DCBC8E2D1A83C0F2D1AEC8D0273D989C287C0B0A45279CCF4F5F62EDA4A15CB8C17F4")]

        public void ModPowerTest(string a, string b, string n, string c) {
            a = Program.Add0(a);
            b = Program.Add0(b);
            var aa = new ulong[a.Length / 8];
            var bb = new ulong[b.Length / 8];
            aa = Program.ToArr(a, aa);
            bb = Program.ToArr(b, bb);
            n = Program.Add0(n);
            var N = new ulong[n.Length / 8];
            N = Program.ToArr(n, N);

            var actualResult = Program.ToStr(Program.GornerBarrett(aa, bb, N));
            Assert.AreEqual(c, actualResult);
        }


    }
}    


